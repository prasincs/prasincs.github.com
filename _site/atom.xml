<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>NextDoorHacker</title>
 <link href="http://prasincs.github.com/atom.xml" rel="self"/>
 <link href="http://prasincs.github.com/"/>
 <updated>2012-01-19T01:13:28-05:00</updated>
 <id>http://prasincs.github.com/</id>
 <author>
   <name>Prasanna Gautam</name>
 </author>

 
 <entry>
   <title>PHP isset with variable name</title>
   <link href="http://prasincs.github.com/2012/01/18/php_isset_with_variable_name/"/>
   <updated>2012-01-18T00:00:00-05:00</updated>
   <id>http://prasincs.github.com/2012/01/18/php_isset_with_variable_name</id>
   <content type="html">&lt;p&gt;I wont try to justify PHP hacking but I was working on a project that's based on &lt;a href=&quot;http://codeigniter.com&quot;&gt;CodeIgniter&lt;/a&gt;. It's on a cycle of heavy refactoring. I was wondering if I could do something like&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - pygmentize -l php -f html -O encoding=utf-8&lt;/p&gt;

&lt;p&gt;similar to  python
Liquid error: No such file or directory - pygmentize -l python -f html -O encoding=utf-8&lt;/p&gt;

&lt;p&gt;Same idea with locals() in python.&lt;/p&gt;

&lt;p&gt;Thankfully, php has the equivalent of &lt;code&gt;globals()&lt;/code&gt; being &lt;code&gt;$GLOBALS&lt;/code&gt; which would return you all the variables declared so far. Now you can just write your own &lt;code&gt;isset_varname()&lt;/code&gt;. &lt;code&gt;get_defined_vars()&lt;/code&gt; is equivalent in php to &lt;code&gt;locals()&lt;/code&gt;. in  python.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - pygmentize -l php -f html -O encoding=utf-8&lt;/p&gt;

&lt;p&gt;you'd probably need to check for the variable name regex and store output from get_defined_vars() in another place too. Of course, if there's some other similar function that anyone else knows about, I'd be happy to find out.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>New Blag - how I learned to stop worrying and love Jekyll</title>
   <link href="http://prasincs.github.com/2012/01/16/new_blag/"/>
   <updated>2012-01-16T00:00:00-05:00</updated>
   <id>http://prasincs.github.com/2012/01/16/new_blag</id>
   <content type="html">&lt;p&gt;So, I've been thinking about this for a while and I finally decided to pull trigger on moving my site fully to github. Let's see where this goes. Also, I want to give a little intro on how to build a site like this (very bare-bones right now, I'm not very fancy).&lt;/p&gt;

&lt;p&gt;Originally, &lt;a href=&quot;http://www.nextdoorhacker.com&quot;&gt;nextdoorhacker.com&lt;/a&gt; was running on a Linode box that I owned since 2008 (summer of freshman year, oh the times), since I was doing a lot of PHP around then, I ran wordpress on it. Later on, I ran &lt;a href=&quot;http://4legs.org&quot;&gt;4legs.org&lt;/a&gt; on it along with a wide-assortment of side projects. But wordpress tends to get really annoying to manage if someone isn't paying you to do it. For me, blogs have always been luxury. So signing in, writing some stuff in a textbox, obsessing over the typeface, getting annoyed over wordpress messing up the format and above all, keeping up with the security patches, new versions becomes work for a blog that probably total of two people ever read.&lt;/p&gt;

&lt;p&gt;Mind you, I didn't start from scratch in moving the site. I took the basic style from &lt;a href=&quot;http://flyerhzm.github.com&quot;&gt;flyerhzm.github.com&lt;/a&gt; and removed a lot of things from the site. So, it's not really a fork, just me being too lazy to write the stylesheets, pages from scratch again. Just FYI, if you're ever in the situation to take a git repository and making your own, you can just remove the .git folder and run git init again. Of course, you should only do this if you do have the rights, etc.&lt;/p&gt;

&lt;p&gt;Creating new posts is just about running, of course after replacing blog_title with something else.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - pygmentize -l bash -f html -O encoding=utf-8&lt;/p&gt;

&lt;p&gt;After that, it's just about writing &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files&lt;/p&gt;
</content>
 </entry>
 

</feed>
